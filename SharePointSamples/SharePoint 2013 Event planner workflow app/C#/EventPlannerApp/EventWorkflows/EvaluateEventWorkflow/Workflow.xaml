<Activity mc:Ignorable="sap sap2010 sads" x:Class="EventPlannerApp.ReviewWorkflow.Evaluate_Event_Suggestion.Workflow" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="EventPlannerApp.ReviewWorkflow.Evaluate_Event_Suggestion.Workflow_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:mswad="clr-namespace:Microsoft.SharePoint.WorkflowServices.Activities.Design;assembly=Microsoft.SharePoint.WorkflowServices.Activities.Design"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.WorkflowServices.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>EventPlannerApp</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Workflow" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:Guid" Name="CurrentListGuid" />
      <Variable x:TypeArguments="s:Guid" Name="CurrentItemGuid" />
      <Variable x:TypeArguments="x:String" Name="EventPlannerLoginName" />
      <Variable x:TypeArguments="x:String" Name="EventPlannerName" />
      <Variable x:TypeArguments="s:DateTime" Name="EventStartDateTime" />
      <Variable x:TypeArguments="s:DateTime" Name="EventEndDateTime" />
      <Variable x:TypeArguments="x:String" Name="EventTitle" />
      <Variable x:TypeArguments="x:Int32" Name="TaskEvaluateOutcome" />
      <Variable x:TypeArguments="x:String" Name="EventSpeakerName" />
      <Variable x:TypeArguments="x:String" Name="EventSpeakerLoginName" />
      <Variable x:TypeArguments="x:String" Name="EventAttendeeName" />
      <Variable x:TypeArguments="x:String" Name="EventAttendeeLoginName" />
      <Variable x:TypeArguments="x:Int32" Name="EventPlannerId" />
    </Sequence.Variables>
    <Sequence sap2010:Annotation.AnnotationText="Collect information from the event suggestion such as the event planner, suggested presenters and attendees." DisplayName="Init Workflow Variables" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <p:SetUserStatus Description="Collecting Workflow Details" DisplayName="Collecting Workflow Details" sap2010:WorkflowViewState.IdRef="SetUserStatus_6" />
      <p1:GetCurrentListId sap2010:WorkflowViewState.IdRef="GetCurrentListId_1">
        <p1:GetCurrentListId.Result>
          <OutArgument x:TypeArguments="s:Guid">
            <mca:CSharpReference x:TypeArguments="s:Guid">CurrentListGuid</mca:CSharpReference>
          </OutArgument>
        </p1:GetCurrentListId.Result>
      </p1:GetCurrentListId>
      <p1:GetCurrentItemGuid sap2010:WorkflowViewState.IdRef="GetCurrentItemGuid_1">
        <p1:GetCurrentItemGuid.Result>
          <OutArgument x:TypeArguments="s:Guid">
            <mca:CSharpReference x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpReference>
          </OutArgument>
        </p1:GetCurrentItemGuid.Result>
      </p1:GetCurrentItemGuid>
      <p:SetUserStatus Description="Collecting Event Details" DisplayName="Collecting Event Details" sap2010:WorkflowViewState.IdRef="SetUserStatus_1" />
      <Parallel sap2010:Annotation.AnnotationText="Get the general details of the event suggestion." DisplayName="Get event details" sap2010:WorkflowViewState.IdRef="Parallel_1">
        <p1:LookupSPListItemStringProperty DisplayName="Get Event Title" sap2010:WorkflowViewState.IdRef="LookupSPListItemStringProperty_1">
          <p1:LookupSPListItemStringProperty.ItemGuid>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemStringProperty.ItemGuid>
          <p1:LookupSPListItemStringProperty.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Suggestion List;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemStringProperty.ListId>
          <p1:LookupSPListItemStringProperty.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Title"</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemStringProperty.PropertyName>
          <p1:LookupSPListItemStringProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">EventTitle</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItemStringProperty.Result>
        </p1:LookupSPListItemStringProperty>
        <p1:LookupSPListItemDateTimeProperty DisplayName="Get Event Start DateTime" sap2010:WorkflowViewState.IdRef="LookupSPListItemDateTimeProperty_1">
          <p1:LookupSPListItemDateTimeProperty.ItemGuid>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemDateTimeProperty.ItemGuid>
          <p1:LookupSPListItemDateTimeProperty.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Suggestion List;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemDateTimeProperty.ListId>
          <p1:LookupSPListItemDateTimeProperty.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"EventStartDateTime"</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemDateTimeProperty.PropertyName>
          <p1:LookupSPListItemDateTimeProperty.Result>
            <OutArgument x:TypeArguments="s:DateTime">
              <mca:CSharpReference x:TypeArguments="s:DateTime">EventStartDateTime</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItemDateTimeProperty.Result>
        </p1:LookupSPListItemDateTimeProperty>
        <p1:LookupSPListItemDateTimeProperty DisplayName="Get Event End DateTime" sap2010:WorkflowViewState.IdRef="LookupSPListItemDateTimeProperty_2">
          <p1:LookupSPListItemDateTimeProperty.ItemGuid>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemDateTimeProperty.ItemGuid>
          <p1:LookupSPListItemDateTimeProperty.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Suggestion List;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemDateTimeProperty.ListId>
          <p1:LookupSPListItemDateTimeProperty.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"EventEndDateTime"</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemDateTimeProperty.PropertyName>
          <p1:LookupSPListItemDateTimeProperty.Result>
            <OutArgument x:TypeArguments="s:DateTime">
              <mca:CSharpReference x:TypeArguments="s:DateTime">EventEndDateTime</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItemDateTimeProperty.Result>
        </p1:LookupSPListItemDateTimeProperty>
      </Parallel>
      <Parallel sap2010:Annotation.AnnotationText="Get details of all people involved with the event: planner, speaker &amp; attendee." DisplayName="Get Participant Details" sap2010:WorkflowViewState.IdRef="Parallel_2">
        <Sequence DisplayName="Get Planner Details" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Sequence.Variables>
            <Variable x:TypeArguments="p:DynamicValue" Name="EventPlannerJson" />
          </Sequence.Variables>
          <p1:LookupSPListItemInt32Property DisplayName="Get Planner UserID" sap2010:WorkflowViewState.IdRef="LookupSPListItemInt32Property_1">
            <p1:LookupSPListItemInt32Property.ItemGuid>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.ItemGuid>
            <p1:LookupSPListItemInt32Property.ListId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Suggestion List;}")</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.ListId>
            <p1:LookupSPListItemInt32Property.PropertyName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"EventPlannerId"</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.PropertyName>
            <p1:LookupSPListItemInt32Property.Result>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">EventPlannerId</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPListItemInt32Property.Result>
          </p1:LookupSPListItemInt32Property>
          <p1:LookupSPUser DisplayName="Get Planner Details (JSON)" sap2010:WorkflowViewState.IdRef="LookupSPUser_1">
            <p1:LookupSPUser.PrincipalId>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">EventPlannerId</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPUser.PrincipalId>
            <p1:LookupSPUser.Result>
              <OutArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpReference x:TypeArguments="p:DynamicValue">EventPlannerJson</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPUser.Result>
          </p1:LookupSPUser>
          <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Planner LoginName" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_1" PropertyName="d/results/(0)/LoginName">
            <p:GetDynamicValueProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">EventPlannerLoginName</mca:CSharpReference>
              </OutArgument>
            </p:GetDynamicValueProperty.Result>
            <p:GetDynamicValueProperty.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">EventPlannerJson</mca:CSharpValue>
              </InArgument>
            </p:GetDynamicValueProperty.Source>
          </p:GetDynamicValueProperty>
          <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Planner Name" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_2" PropertyName="d/results/(0)/Title">
            <p:GetDynamicValueProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">EventPlannerName</mca:CSharpReference>
              </OutArgument>
            </p:GetDynamicValueProperty.Result>
            <p:GetDynamicValueProperty.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">EventPlannerJson</mca:CSharpValue>
              </InArgument>
            </p:GetDynamicValueProperty.Source>
          </p:GetDynamicValueProperty>
          <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_2">
            <p1:WriteToHistory.Message>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"Planner (" + EventPlannerLoginName + ") " + EventPlannerName</mca:CSharpValue>
              </InArgument>
            </p1:WriteToHistory.Message>
          </p1:WriteToHistory>
        </Sequence>
        <Sequence DisplayName="Get Speaker Details" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" Name="EventSpeakerId" />
            <Variable x:TypeArguments="p:DynamicValue" Name="EventSpeakerJson" />
          </Sequence.Variables>
          <p1:LookupSPListItemInt32Property DisplayName="Get Speaker UserID" sap2010:WorkflowViewState.IdRef="LookupSPListItemInt32Property_2">
            <p1:LookupSPListItemInt32Property.ItemGuid>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.ItemGuid>
            <p1:LookupSPListItemInt32Property.ListId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Suggestion List;}")</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.ListId>
            <p1:LookupSPListItemInt32Property.PropertyName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"SuggestedSpeakerId"</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.PropertyName>
            <p1:LookupSPListItemInt32Property.Result>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">EventSpeakerId</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPListItemInt32Property.Result>
          </p1:LookupSPListItemInt32Property>
          <p1:LookupSPUser DisplayName="Get Speaker Details (JSON)" sap2010:WorkflowViewState.IdRef="LookupSPUser_2">
            <p1:LookupSPUser.PrincipalId>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">EventSpeakerId</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPUser.PrincipalId>
            <p1:LookupSPUser.Result>
              <OutArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpReference x:TypeArguments="p:DynamicValue">EventSpeakerJson</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPUser.Result>
          </p1:LookupSPUser>
          <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Speaker LoginName" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_3" PropertyName="d/results/(0)/LoginName">
            <p:GetDynamicValueProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">EventSpeakerLoginName</mca:CSharpReference>
              </OutArgument>
            </p:GetDynamicValueProperty.Result>
            <p:GetDynamicValueProperty.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">EventSpeakerJson</mca:CSharpValue>
              </InArgument>
            </p:GetDynamicValueProperty.Source>
          </p:GetDynamicValueProperty>
          <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Speaker Name" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_4" PropertyName="d/results/(0)/Title">
            <p:GetDynamicValueProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">EventSpeakerName</mca:CSharpReference>
              </OutArgument>
            </p:GetDynamicValueProperty.Result>
            <p:GetDynamicValueProperty.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">EventSpeakerJson</mca:CSharpValue>
              </InArgument>
            </p:GetDynamicValueProperty.Source>
          </p:GetDynamicValueProperty>
          <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_1">
            <p1:WriteToHistory.Message>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"Speaker (" +EventSpeakerLoginName +") " +EventSpeakerName</mca:CSharpValue>
              </InArgument>
            </p1:WriteToHistory.Message>
          </p1:WriteToHistory>
        </Sequence>
        <Sequence DisplayName="Get Attendee Details" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" Name="EventAttendeeId" />
            <Variable x:TypeArguments="p:DynamicValue" Name="EventAttendeeJson" />
          </Sequence.Variables>
          <p1:LookupSPListItemInt32Property DisplayName="Get Attendee UserID" sap2010:WorkflowViewState.IdRef="LookupSPListItemInt32Property_3">
            <p1:LookupSPListItemInt32Property.ItemGuid>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.ItemGuid>
            <p1:LookupSPListItemInt32Property.ListId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Suggestion List;}")</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.ListId>
            <p1:LookupSPListItemInt32Property.PropertyName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"SuggestedAttendeeId"</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItemInt32Property.PropertyName>
            <p1:LookupSPListItemInt32Property.Result>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">EventAttendeeId</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPListItemInt32Property.Result>
          </p1:LookupSPListItemInt32Property>
          <p1:LookupSPUser DisplayName="Get Attendee Details (JSON)" sap2010:WorkflowViewState.IdRef="LookupSPUser_3">
            <p1:LookupSPUser.PrincipalId>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">EventAttendeeId</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPUser.PrincipalId>
            <p1:LookupSPUser.Result>
              <OutArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpReference x:TypeArguments="p:DynamicValue">EventAttendeeJson</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPUser.Result>
          </p1:LookupSPUser>
          <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Attendee LoginName" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_5" PropertyName="d/results/(0)/LoginName">
            <p:GetDynamicValueProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">EventAttendeeLoginName</mca:CSharpReference>
              </OutArgument>
            </p:GetDynamicValueProperty.Result>
            <p:GetDynamicValueProperty.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">EventAttendeeJson</mca:CSharpValue>
              </InArgument>
            </p:GetDynamicValueProperty.Source>
          </p:GetDynamicValueProperty>
          <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Attendee Name" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_6" PropertyName="d/results/(0)/Title">
            <p:GetDynamicValueProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">EventAttendeeName</mca:CSharpReference>
              </OutArgument>
            </p:GetDynamicValueProperty.Result>
            <p:GetDynamicValueProperty.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">EventAttendeeJson</mca:CSharpValue>
              </InArgument>
            </p:GetDynamicValueProperty.Source>
          </p:GetDynamicValueProperty>
          <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_3">
            <p1:WriteToHistory.Message>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"Attendee (" +EventAttendeeLoginName +") " +EventAttendeeName</mca:CSharpValue>
              </InArgument>
            </p1:WriteToHistory.Message>
          </p1:WriteToHistory>
        </Sequence>
      </Parallel>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Assign evaluation task to event planner." DisplayName="Evaluate Event" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="TaskEvaluateId" />
      </Sequence.Variables>
      <p:SetUserStatus Description="Assigning and Waiting for Event Planner Evaluation Task" DisplayName="Assigning Event Planner Evaluation Task" sap2010:WorkflowViewState.IdRef="SetUserStatus_2" />
      <p1:SingleTask DueDate="{x:Null}" OverdueReminderRepeat="{x:Null}" OverdueRepeatTimes="{x:Null}" SendReminderEmail="{x:Null}" AssignmentEmailBody="A new event has been suggested. Please review the task assigned to you and approve/reject the event suggestion." AssignmentEmailSubject="New event suggested - Requesting Evaluation" Body="An event has been suggested. Please evaluate the suggestion and approve/decline it." CancelationEmailBody="The event suggestion has been cancelled." CancelationEmailSubject="Event Suggestion Evaluation Cancelled" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" DisplayName="TASK: Evaluate Event" sap2010:WorkflowViewState.IdRef="SingleTask_1" OutcomeFieldName="TaskOutcome" OverdueEmailBody="The event suggestion evaluation task is overdue." OverdueEmailSubject="Event Suggestion Evaluation Overdue" Title="Evaluate Event" WaitForTaskCompletion="True">
        <p1:SingleTask.AssignedTo>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">EventPlannerLoginName</mca:CSharpValue>
          </InArgument>
        </p1:SingleTask.AssignedTo>
        <p1:SingleTask.Outcome>
          <OutArgument x:TypeArguments="x:Int32">
            <mca:CSharpReference x:TypeArguments="x:Int32">TaskEvaluateOutcome</mca:CSharpReference>
          </OutArgument>
        </p1:SingleTask.Outcome>
        <p1:SingleTask.RelatedContentLinkListId>
          <InArgument x:TypeArguments="s:Guid">
            <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Suggestion List;}")</mca:CSharpValue>
          </InArgument>
        </p1:SingleTask.RelatedContentLinkListId>
        <p1:SingleTask.RelatedContentLinkListItemId>
          <InArgument x:TypeArguments="s:Guid">
            <mca:CSharpValue x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpValue>
          </InArgument>
        </p1:SingleTask.RelatedContentLinkListItemId>
        <p1:SingleTask.TaskId>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String">TaskEvaluateId</mca:CSharpReference>
          </OutArgument>
        </p1:SingleTask.TaskId>
      </p1:SingleTask>
    </Sequence>
    <If sap2010:Annotation.AnnotationText="Decision tree if event is approved or rejected." DisplayName="If event APPROVED or REJECTED..." sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">TaskEvaluateOutcome==0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap2010:Annotation.AnnotationText="APPROVE event suggestion branch." DisplayName="Event Approved" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:Guid" Name="EventCalendarItemGuid" />
            <Variable x:TypeArguments="x:String" Name="TaskUploadSlidesId" />
            <Variable x:TypeArguments="x:Int32" Name="TaskUploadSlidesOutcome" />
          </Sequence.Variables>
          <p:SetUserStatus Description="Approving Event Suggestion" DisplayName="Approving Event Suggestion" sap2010:WorkflowViewState.IdRef="SetUserStatus_4" />
          <p1:SetField FieldValueDynamicValue="{x:Null}" DisplayName="Update event suggestion" sap2010:WorkflowViewState.IdRef="SetField_1">
            <p1:SetField.FieldName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"EventStatus"</mca:CSharpValue>
              </InArgument>
            </p1:SetField.FieldName>
            <p1:SetField.FieldValue>
              <InArgument x:TypeArguments="x:Object">
                <mca:CSharpValue x:TypeArguments="x:Object">"Approved"</mca:CSharpValue>
              </InArgument>
            </p1:SetField.FieldValue>
          </p1:SetField>
          <p1:CreateListItem CreatedListItemProperties="{x:Null}" ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Create Calendar Item" sap2010:WorkflowViewState.IdRef="CreateListItem_1">
            <p1:CreateListItem.ListId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Calendar;}")</mca:CSharpValue>
              </InArgument>
            </p1:CreateListItem.ListId>
            <p1:CreateListItem.ListItemPropertiesDynamicValue>
              <InArgument x:TypeArguments="p:DynamicValue">
                <p:SetDynamicValueProperties>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument">
                    <InArgument x:TypeArguments="x:String" x:Key="Title">
                      <mca:CSharpValue x:TypeArguments="x:String">EventTitle</mca:CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="EventDate">
                      <mca:CSharpValue x:TypeArguments="s:DateTime">EventStartDateTime</mca:CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="EndDate">
                      <mca:CSharpValue x:TypeArguments="s:DateTime">EventEndDateTime</mca:CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:Int32" x:Key="EventPlannerId">
                      <mca:CSharpValue x:TypeArguments="x:Int32">EventPlannerId</mca:CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="EventConcludedColumn">False</InArgument>
                  </scg:Dictionary>
                </p:SetDynamicValueProperties>
              </InArgument>
            </p1:CreateListItem.ListItemPropertiesDynamicValue>
            <p1:CreateListItem.Result>
              <OutArgument x:TypeArguments="s:Guid">
                <mca:CSharpReference x:TypeArguments="s:Guid">EventCalendarItemGuid</mca:CSharpReference>
              </OutArgument>
            </p1:CreateListItem.Result>
          </p1:CreateListItem>
          <p1:SingleTask DueDate="{x:Null}" OverdueReminderRepeat="{x:Null}" OverdueRepeatTimes="{x:Null}" SendReminderEmail="{x:Null}" AssignmentEmailBody="You have been assigned to be the speaker of a new event. Please upload your slides to the event document library." AssignmentEmailSubject="Event Slides Required" Body="Upload presentation slides to event document library." CancelationEmailBody="Event Presentation - Cancelled" CancelationEmailSubject="The event you were scheduled to present at has been cancelled." CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F006CD9965CEC544C7595FDBA918FD0CFB0" DefaultTaskOutcome="0" DisplayName="TASK: Speaker Slide Upload" sap2010:WorkflowViewState.IdRef="SingleTask_2" OutcomeFieldName="SlidesUpdatedOutcomeColumn" OverdueEmailBody="Event Presentation - Overdue" OverdueEmailSubject="You are a presenter for an event and you are now overdue on submitting your slides." Title="Upload event presentation" WaitForTaskCompletion="True">
            <p1:SingleTask.AssignedTo>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">EventSpeakerLoginName</mca:CSharpValue>
              </InArgument>
            </p1:SingleTask.AssignedTo>
            <p1:SingleTask.Outcome>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">TaskUploadSlidesOutcome</mca:CSharpReference>
              </OutArgument>
            </p1:SingleTask.Outcome>
            <p1:SingleTask.RelatedContentLinkListId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Suggestion List;}")</mca:CSharpValue>
              </InArgument>
            </p1:SingleTask.RelatedContentLinkListId>
            <p1:SingleTask.RelatedContentLinkListItemId>
              <InArgument x:TypeArguments="s:Guid">
                <mca:CSharpValue x:TypeArguments="s:Guid">CurrentItemGuid</mca:CSharpValue>
              </InArgument>
            </p1:SingleTask.RelatedContentLinkListItemId>
            <p1:SingleTask.TaskId>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">TaskUploadSlidesId</mca:CSharpReference>
              </OutArgument>
            </p1:SingleTask.TaskId>
          </p1:SingleTask>
          <Sequence sap2010:Annotation.AnnotationText="After the event has concluded (indicated by the event being updated to state it has concluded), send a survey to the attendees." DisplayName="Send Survey After Event" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <Sequence.Variables>
              <Variable x:TypeArguments="sco:Collection(x:String)" Name="SurveyRecipientCollection" />
            </Sequence.Variables>
            <p1:WaitForFieldChange EventPayload="{x:Null}" DisplayName="WAIT: Event to conclude" FieldValue="true" sap2010:WorkflowViewState.IdRef="WaitForFieldChange_1">
              <p1:WaitForFieldChange.FieldName>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">"EventConcludedColumn"</mca:CSharpValue>
                </InArgument>
              </p1:WaitForFieldChange.FieldName>
              <p1:WaitForFieldChange.ItemGuid>
                <InArgument x:TypeArguments="s:Guid">
                  <mca:CSharpValue x:TypeArguments="s:Guid">EventCalendarItemGuid</mca:CSharpValue>
                </InArgument>
              </p1:WaitForFieldChange.ItemGuid>
              <p1:WaitForFieldChange.ListId>
                <InArgument x:TypeArguments="s:Guid">
                  <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Event Calendar;}")</mca:CSharpValue>
                </InArgument>
              </p1:WaitForFieldChange.ListId>
            </p1:WaitForFieldChange>
            <p:BuildCollection x:TypeArguments="x:String" DisplayName="Build Email Recipients" sap2010:WorkflowViewState.IdRef="BuildCollection`1_1">
              <p:BuildCollection.Result>
                <OutArgument x:TypeArguments="sco:Collection(x:String)">
                  <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">SurveyRecipientCollection</mca:CSharpReference>
                </OutArgument>
              </p:BuildCollection.Result>
              <p:BuildCollection.Values>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">EventAttendeeLoginName</mca:CSharpValue>
                </InArgument>
              </p:BuildCollection.Values>
            </p:BuildCollection>
            <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" Body="Please visit the site and rate the event you attended in the survey list." sap2010:WorkflowViewState.IdRef="Email_1" Subject="Please provide a survey for the event you attended.">
              <p1:Email.To>
                <InArgument x:TypeArguments="sco:Collection(x:String)">
                  <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">SurveyRecipientCollection</mca:CSharpValue>
                </InArgument>
              </p1:Email.To>
            </p1:Email>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:Annotation.AnnotationText="REJECT event suggestion branch." DisplayName="Event Rejected" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <p:SetUserStatus Description="Event Suggestion Declined" DisplayName="Event Suggestion Declined" sap2010:WorkflowViewState.IdRef="SetUserStatus_5" />
          <p1:SetField FieldValueDynamicValue="{x:Null}" DisplayName="Update event suggestion" sap2010:WorkflowViewState.IdRef="SetField_2">
            <p1:SetField.FieldName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"EventStatus"</mca:CSharpValue>
              </InArgument>
            </p1:SetField.FieldName>
            <p1:SetField.FieldValue>
              <InArgument x:TypeArguments="x:Object">
                <mca:CSharpValue x:TypeArguments="x:Object">"Rejected"</mca:CSharpValue>
              </InArgument>
            </p1:SetField.FieldValue>
          </p1:SetField>
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="SetUserStatus_6" sap:VirtualizedContainerService.HintSize="860,22" />
      <sap2010:ViewStateData Id="GetCurrentListId_1" sap:VirtualizedContainerService.HintSize="860,22" />
      <sap2010:ViewStateData Id="GetCurrentItemGuid_1" sap:VirtualizedContainerService.HintSize="860,22" />
      <sap2010:ViewStateData Id="SetUserStatus_1" sap:VirtualizedContainerService.HintSize="860,22" />
      <sap2010:ViewStateData Id="LookupSPListItemStringProperty_1" sap:VirtualizedContainerService.HintSize="200,40">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ListId" DisplayName="Event Suggestion List" Value="Lists/Event Suggestion List" />
              <mswad:ViewStateNameValue x:Key="PropertyName" DisplayName="Event Title" Value="Title" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItemDateTimeProperty_1" sap:VirtualizedContainerService.HintSize="200,40">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ListId" DisplayName="Event Suggestion List" Value="Lists/Event Suggestion List" />
              <mswad:ViewStateNameValue x:Key="PropertyName" DisplayName="Event Start Date Time" Value="EventStartDateTime" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItemDateTimeProperty_2" sap:VirtualizedContainerService.HintSize="200,40">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ListId" DisplayName="Event Suggestion List" Value="Lists/Event Suggestion List" />
              <mswad:ViewStateNameValue x:Key="PropertyName" DisplayName="Event End Date Time" Value="EventEndDateTime" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="860,85">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItemInt32Property_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ListId" DisplayName="Event Suggestion List" Value="Lists/Event Suggestion List" />
              <mswad:ViewStateNameValue x:Key="PropertyName" DisplayName="Event Planner" Value="EventPlannerId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPUser_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteToHistory_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="222,394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItemInt32Property_2" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ListId" DisplayName="Event Suggestion List" Value="Lists/Event Suggestion List" />
              <mswad:ViewStateNameValue x:Key="PropertyName" DisplayName="Suggested Speaker" Value="SuggestedSpeakerId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPUser_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteToHistory_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="222,394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItemInt32Property_3" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ListId" DisplayName="Event Suggestion List" Value="Lists/Event Suggestion List" />
              <mswad:ViewStateNameValue x:Key="PropertyName" DisplayName="Suggested Attendee" Value="SuggestedAttendeeId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPUser_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteToHistory_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="222,394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_2" sap:VirtualizedContainerService.HintSize="860,463">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="882,983">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetUserStatus_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SingleTask_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ContentTypeId" DisplayName="Workflow Task (SharePoint 2013)" Value="0x0108003365C4474CAE8C42BCE396314E88E51F" />
              <mswad:ViewStateNameValue x:Key="OutcomeFieldName" DisplayName="Task Outcome" Value="TaskOutcome" />
              <mswad:ViewStateNameValue x:Key="RelatedContentLinkListId" DisplayName="Event Suggestion List" Value="Lists/Event Suggestion List" />
              <mswad:ViewStateNameValue x:Key="DefaultTaskOutcome" DisplayName="Approved" Value="0" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="882,244">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetUserStatus_4" sap:VirtualizedContainerService.HintSize="222,22" />
      <sap2010:ViewStateData Id="SetField_1" sap:VirtualizedContainerService.HintSize="222,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="FieldName" DisplayName="Event Status" Value="EventStatus" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateListItem_1" sap:VirtualizedContainerService.HintSize="222,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ListId" DisplayName="Event Calendar" Value="Lists/Event Calendar" />
            </scg:Dictionary>
            <x:String x:Key="ListItemPropertiesDynamicValue.SelectedEntityType">Lists/Event Calendar</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SingleTask_2" sap:VirtualizedContainerService.HintSize="222,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ContentTypeId" DisplayName="SlidesUploadedTaskCT" Value="0x0108003365C4474CAE8C42BCE396314E88E51F006CD9965CEC544C7595FDBA918FD0CFB0" />
              <mswad:ViewStateNameValue x:Key="OutcomeFieldName" DisplayName="SlidesUpdatedOutcomeColumn" Value="SlidesUpdatedOutcomeColumn" />
              <mswad:ViewStateNameValue x:Key="RelatedContentLinkListId" DisplayName="Event Suggestion List" Value="Lists/Event Suggestion List" />
              <mswad:ViewStateNameValue x:Key="DefaultTaskOutcome" DisplayName="Completed" Value="0" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WaitForFieldChange_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="ListId" DisplayName="Event Calendar" Value="Lists/Event Calendar" />
              <mswad:ViewStateNameValue x:Key="FieldName" DisplayName="Event Concluded Column" Value="EventConcludedColumn" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Email_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="244,727">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetUserStatus_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SetField_2" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, mswad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <mswad:ViewStateNameValue x:Key="FieldName" DisplayName="Event Status" Value="EventStatus" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="222,231">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="882,893">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="904,2324">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="EventPlannerApp.ReviewWorkflow.Evaluate_Event_Suggestion.Workflow_1" sap:VirtualizedContainerService.HintSize="922,1313" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>